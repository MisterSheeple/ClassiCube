ifeq ($(strip $(DEVKITARM)),)
$(error "Please set DEVKITARM in your environment. export DEVKITARM=<path to>devkitARM")
endif

include $(DEVKITARM)/3ds_rules

#---------------------------------------------------------------------------------
# configurable options
#---------------------------------------------------------------------------------
APP_ICON	:= $(CURDIR)"/../misc/CC_48x48.png"
APP_TITLE 	:= ClassiCube
APP_DESCRIPTION := Simple block building sandbox
APP_AUTHOR 	:= UnknownShadow200
TARGET := ClassiCube-3ds

#---------------------------------------------------------------------------------
# compilation options
#---------------------------------------------------------------------------------
CFILES		:=	$(wildcard *.c)
SFILES		:=	$(wildcard *.s)
PICAFILES	:=	$(wildcard *.v.pica)

LIBS	:= -lcitro3d -lctru -lm


export LD	:=	$(CC)
DEPSDIR	:= $(CURDIR)/build

OFILES_SOURCES := $(CFILES:.c=.o) $(SFILES:.s=.o)
OFILES_SHADERS := $(PICAFILES:.v.pica=.shbin.o)
OFILES 	:= $(OFILES_SHADERS) $(OFILES_SOURCES)

INCLUDE	:=	$(foreach dir,$(CTRULIB),-I$(dir)/include)
LIBPATHS	:=	$(foreach dir,$(CTRULIB),-L$(dir)/lib)

_3DSXDEPS	:=	$(if $(NO_SMDH),,$(CURDIR)/$(TARGET).smdh)

ifeq ($(strip $(NO_SMDH)),)
	export _3DSXFLAGS += --smdh=$(CURDIR)/$(TARGET).smdh
endif

#---------------------------------------------------------------------------------
# code generation options
#---------------------------------------------------------------------------------
ARCH	:=	-march=armv6k -mtune=mpcore -mfloat-abi=hard -mtp=soft

CFLAGS	:=	-g -Wall -O2 -mword-relocations -ffunction-sections \
			$(ARCH) $(INCLUDE) -D__3DS__

ASFLAGS	:=	-g $(ARCH)
LDFLAGS	=	-specs=3dsx.specs -g $(ARCH) -Wl,-Map,$(notdir $*.map)

#---------------------------------------------------------------------------------
# main targets
#---------------------------------------------------------------------------------
default: $(DEPSDIR) $(TARGET).3dsx

clean:
	@rm $(OFILES) $(TARGET).3dsx $(TARGET).smdh $(TARGET).elf

$(TARGET).elf	: $(OFILES)

$(TARGET).3dsx : $(TARGET).elf $(_3DSXDEPS)

Graphics_3DS.o : $(OFILES_SHADERS)

$(DEPSDIR):
	@mkdir -p $@

#---------------------------------------------------------------------------------
# rules for assembling GPU shaders
#---------------------------------------------------------------------------------
%.shbin.o : %.v.pica
	$(eval CUR_SH := $<)
	$(eval CURBIN := $(subst .v.pica,.shbin,$<))
	picasso -o $(CURBIN) $(CUR_SH)
	bin2s $(CURBIN) | $(AS) -o $(CURBIN).o